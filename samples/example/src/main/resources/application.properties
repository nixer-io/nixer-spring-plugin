server.address=0.0.0.0
server.port=8080

# Logging configuration
logging.level.io.nixer.nixerplugin=TRACE

# Configure stigma store
nixer.stigma.cookieName=stgtk
nixer.stigma.stigmaLifetime=P365D
nixer.stigma.encryptionKeyFile=classpath:stigma-enc-jwk.json
nixer.stigma.decryptionKeyFile=classpath:stigma-dec-jwk.json

# Configure logging of events to ElasticSearch [disabled]
# requires ElasticSearch running
nixer.events.elastic.enabled=false
nixer.events.elastic.index=nixer

#spring.elasticsearch.jest.connection-timeout=3s
#spring.elasticsearch.jest.multi-threaded=true
#spring.elasticsearch.jest.read-timeout=3s
#spring.elasticsearch.jest.uris=http://localhost:9200
#spring.elasticsearch.jest.username=
#spring.elasticsearch.jest.password=
#spring.elasticsearch.jest.proxy.host=
#spring.elasticsearch.jest.proxy.port=

# Configures nixer filters
nixer.filters.dry-run=false

# Configure matching request ip to defined ip-ranges
nixer.filter.ip.enabled=true
nixer.filter.ip.ip-prefixes-path=classpath:ip-ranges.json

# Configure behaviors
# Configure what parts of request should be logged for log behavior
nixer.behaviors.log.include-headers=true
nixer.behaviors.log.include-query-string=true
nixer.behaviors.log.include-metadata=true
nixer.behaviors.log.include-user-info=true

#Configure rule for consecutive failed login per ip
nixer.rules.failed-login-threshold.ip.enabled=true
nixer.rules.failed-login-threshold.ip.threshold=5
nixer.rules.failed-login-threshold.ip.window=5m

#Configure rule for consecutive failed login per username
nixer.rules.failed-login-threshold.username.enabled=true
nixer.rules.failed-login-threshold.username.threshold=5
nixer.rules.failed-login-threshold.username.window=5m

#Configure rule for consecutive failed login per user agent string
nixer.rules.failed-login-threshold.useragent.enabled=true
nixer.rules.failed-login-threshold.useragent.threshold=5
nixer.rules.failed-login-threshold.useragent.window=5m

#Configure rule for consecutive failed login per fingerprint
nixer.rules.failed-login-threshold.fingerprint.enabled=true
nixer.rules.failed-login-threshold.fingerprint.threshold=5
nixer.rules.failed-login-threshold.fingerprint.window=5m

# Configure failed-to-successful login ratio rule - [disabled]
# To be enabled selectively, for particular scenarios, as affects all requests when activated.
nixer.rules.failed-login-ratio-level.enabled=false
nixer.rules.failed-login-ratio-level.activationLevel=65
nixer.rules.failed-login-ratio-level.deactivationLevel=55
nixer.rules.failed-login-ratio-level.minimumSampleSize=20
nixer.rules.failed-login-ratio-level.window=10m

# Fingerprinting mechanism
nixer.fingerprint.enabled=true
nixer.fingerprint.cookieName=fgprt

# Configures password checking against pwned passwords bloom file
nixer.pwned.check.enabled=true
nixer.pwned.check.passwordParameter=password
nixer.pwned.check.pwnedFilePath=classpath:pwned-database/example.bloom
nixer.pwned.check.maxPasswordLength=50

# Configure captcha checking
nixer.login.captcha.condition=SESSION_CONTROLLED
nixer.login.captcha.param=g-recaptcha-response

# Configure Google's Recaptcha v2 integration
nixer.captcha.recaptcha.verifyUrl=https://www.google.com/recaptcha/api/siteverify
# Use those test keys to make captcha always pass. Suitable for automated tests
#nixer.captcha.recaptcha.key.site=6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
#nixer.captcha.recaptcha.key.secret=6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
nixer.captcha.recaptcha.key.site=6LetVa4UAAAAAPpwWsl3LRRk8qCRfZvKJjE0U4Om
nixer.captcha.recaptcha.key.secret=6LetVa4UAAAAAAAa1f1PaqgStH8rgV5sqTlUxGd4
nixer.captcha.recaptcha.http.timeout.connect=2000
nixer.captcha.recaptcha.http.timeout.read=2000
nixer.captcha.recaptcha.http.timeout.connectionRequest=2000
nixer.captcha.recaptcha.http.maxConnections=10

# Expose Actuator endpoints for managing captcha & behaviors at runtime
management.endpoints.web.exposure.include=metrics,captcha,loggers,behaviors

# Configure in-memory embedded H2 database
# Only the name for clarity of the example, all the other parameters are covered by the datasource auto-configuration
spring.datasource.name=nixer-plugin-app-db

# Configure micrometer to use Influx exporter.
# requires Influx running
management.metrics.export.influx.enabled=true
management.metrics.export.influx.auto-create-db=true
management.metrics.export.influx.batch-size=10000
management.metrics.export.influx.compressed=true
management.metrics.export.influx.connect-timeout=1s
management.metrics.export.influx.consistency=one
management.metrics.export.influx.db=mydb
management.metrics.export.influx.num-threads=2
management.metrics.export.influx.password=root
management.metrics.export.influx.read-timeout=10s
management.metrics.export.influx.step=1m
management.metrics.export.influx.uri=http://localhost:8086
management.metrics.export.influx.user-name=root

# Configure metrics
management.metrics.enable.login=true
management.metrics.enable.captcha=true
management.metrics.enable.pwned_check=true

#server.use-forward-headers=true
